---
- name: Cisco
  hosts: all
  tasks:
    - name: Create variable
      ansible.builtin.set_fact:
        host_list:
          - ac-in-A01
          - ac-in-A02
          - ac-in-A02-IPMI
          - ac-in-A03
          - ac-in-A05
          - ac-in-A06-IPMI
          - ac-in-A07
          - ac-in-A09
          - ac-in-A10
          - ac-in-B01
          - ac-in-B02
          - ac-in-B02-IPMI
          - ac-in-B03
          - ac-in-B04
          - ac-in-B04-IPMI
          - ac-in-B05a
          - ac-in-B05b
          - ac-in-B06
          - ac-in-B06-IPMI
          - ac-in-B07
          - ac-in-B08
          - ac-in-B08-IPMI
          - ac-in-V9-IPMI
          - ac-pub-A01
          - ac-pub-A02
          - ac-pub-A03
          - ac-pub-A05
          - ac-pub-A07
          - ac-pub-A10
          - ac-pub-B01
          - ac-pub-B06
          - ac-pub-B07
          - ac-pub-B08
          - ac-pubin-A04
          - ac-pubin-A08
          - ac-pubin-V9
          
    - name: Create directory
      ansible.builtin.file:
        path: "/data/config/{{ item }}"
        owner: root
        group: root
        mode: '0700'
        state: directory
      with_items: "{{ host_list }}"
      delegate_to: swt
    
    - name: Get ansible date/time facts
      ansible.builtin.setup:
        filter: "ansible_date_time"
        gather_subset: "!all"
      run_once: true
      delegate_to: swt
    
    - name: Configurable backup path
      ansible.builtin.shell: |
        scp -o ConnectTimeout=10 {{ item }}:running-config \
        /data/config/{{ item }}/running-config_{{ ansible_date_time.date }}
      ignore_errors: true
      with_items: "{{ host_list }}"
      register: result_backup
      delegate_to: swt
      retries: 3
      delay: 5

    - name: Manage result file and record failed hosts
      block:
        - name: Remove result file if exists
          ansible.builtin.file:
            path: "/data/config/result"
            state: absent
          run_once: true
          delegate_to: swt
    
        - name: Create an empty file
          ansible.builtin.file:
            path: "/data/config/result"
            state: touch
            owner: root
            group: root
            mode: '0600'
          run_once: true
          delegate_to: swt
    
        - name: Check if backup file exists
          ansible.builtin.stat:
            path: "/data/config/{{ item }}/running-config_{{ ansible_date_time.date }}"
          register: backup_file_stat
          delegate_to: swt
          with_items: "{{ host_list }}"
    
        - name: Record backup status in result file
          ansible.builtin.lineinfile:
            path: "/data/config/result"
            line: "{{ item.item }}"
          delegate_to: swt
          with_items: "{{ result_backup.results }}"
          when:
            - item.failed | default(false)
            - not backup_file_stat.stat.exists
          throttle: 1
    
        - name: Get file size
          ansible.builtin.stat:
            path: "/data/config/result"
          register: file_stat
          delegate_to: swt
    
        - name: Add "None" if file size is 0
          ansible.builtin.lineinfile:
            path: "/data/config/result"
            line: "None"
          when: file_stat.stat.size == 0
          delegate_to: swt
    
    - name: Delete backups older than 30 days
      ansible.builtin.find:
        paths: "/data/config/"
        patterns: "running-config_*"
        age: "30d"
        recurse: true
      register: old_backups
      delegate_to: swt
    
    - name: Delete old backup files
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: absent
      with_items: "{{ old_backups.files }}"
      delegate_to: swt
